{
  "category": "NODEJS",
  "date": "2017-04-21T07:43:36.463Z",
  "display_date": "2017-03-21 16:43:36",
  "title": "JSON 소개",
  "thumbnail": "",
  "article_text_contents": "# JSON 소개\r\n\r\n> - JSON은 **J**ava**S**cript **O**bject **N**otation. 의 약어입니다.\r\n> - JOSN은 가벼운 데이터 교환 형식입니다.\r\n> - JSON은 데이터를 저장하고 교환하는 문법입니다.\r\n> - JSON은 텍스트로 이루어져 있으며, Javascript의 객체 문법으로 쓰입니다.\r\n> - JSON은 특정 언어에 의존적이지 않습니다.\r\n\r\n> **JSON은 자바스크립트 객체 문법을 사용하지만 그 자체의 형태는 오직 텍스트로만 이루어져 있습니다. 따라서 텍스트 형식의 데이터는 모든 프로그래밍 언어에서 읽고 사용할 수 있기 때문에 JSON은 특정 언어에 의존적이지 않습니다.**\r\n\r\n## 데이터 교환\r\n\r\n브라우저와 서버가 데이터를 교환할 때 데이터는 반드시 텍스트 여야 합니다.\r\n\r\n또한 어느 자바스크립트의 객체라도 JSON 으로 변환할 수 있고 이를 서버에 전송할 수 있으며 반대로 서버로부터 전달받은 JSON을 자바스크립트 객체로 변환할 수도 있습니다.\r\n\r\n이러한 방식을 사용하면 데이터를 간편하게 자바스크립트 객체로 다룰 수 있습니다.\r\n\r\n## 데이터 전송\r\n\r\n자바스크립트 객체 내부에 저장된 데이터를 가지고 있다면 그 객체를 JSON 으로 변환할 수 있고 서버 측에 전송할 수 있습니다.\r\n\r\n```\r\nlet firstObj = {\r\n  'name': 'boolean99',\r\n  'age': '20',\r\n  'city': 'seoul'\r\n};\r\nlet firstJSON = JSON.stringify(firstObj);\r\n\r\nconsole.log(firstObj); // javascript object\r\nconsole.log(firstJSON); // JSON\r\n```\r\n\r\n## 데이터 저장\r\n 데이터를 저장할 때 데이터는 특정한 형식이여야 하며 저장하려는 위치에 상관없이 저장할 수 있어야 합니다. \r\n\r\n```\r\nlet firstObj = {\r\n  'name': 'boolean99',\r\n  'age': '20',\r\n  'city': 'seoul'\r\n};\r\nlet firstJSON = JSON.stringify(firstObj);\r\n\r\nconsole.log(firstObj); // javascript object\r\nconsole.log(firstJSON); // JSON\r\n\r\n/**\r\n  * JSON형식으로 변환된 firstJSON 변수의 값을\r\n  * 다시 브라우저에서 사용하기 위해 parse() 메서드를 사용해\r\n  * 자바스크립트 객체로 한 번 더 변환한 후 자유롭게\r\n  * 자바스크립트 객체문법을 활용해 데이터를 조작할 수 있습니다.\r\n  */\r\n  \r\nlet parsedJSON = JSON.parse(firstJSON);\r\nconsole.log(parsedJSON); // javascript object\r\nconsole.log(parsedJSON.name) // 'young'\r\nconsole.log(firstObj.name) // 'young'\r\nparsedJSON.name === firstObj.name // true\r\n```"
}